// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Theseus.Infrastructure.DbContexts;

#nullable disable

namespace Theseus.Infrastructure.Migrations
{
    [DbContext(typeof(TheseusDbContext))]
    [Migration("20231014134356_MazeWithSolution")]
    partial class MazeWithSolution
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Theseus.Infrastructure.Dtos.MazeDto", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte>("EndDirection")
                        .HasColumnType("tinyint");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<byte[]>("Solution")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("SolutionStartColumn")
                        .HasColumnType("int");

                    b.Property<int>("SolutionStartRow")
                        .HasColumnType("int");

                    b.Property<byte>("StartDirection")
                        .HasColumnType("tinyint");

                    b.Property<byte[]>("Structure")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Mazes");
                });
#pragma warning restore 612, 618
        }
    }
}
