// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Theseus.Infrastructure.DbContexts;

#nullable disable

namespace Theseus.Infrastructure.Migrations
{
    [DbContext(typeof(TheseusDbContext))]
    [Migration("20231105210010_Dtos2")]
    partial class Dtos2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ExamSetDtoMazeDto", b =>
                {
                    b.Property<Guid>("ExamSetDtosId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MazeDtosId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ExamSetDtosId", "MazeDtosId");

                    b.HasIndex("MazeDtosId");

                    b.ToTable("ExamSetDtoMazeDto");
                });

            modelBuilder.Entity("PatientDtoStaffMemberDto", b =>
                {
                    b.Property<Guid>("PatientDtosId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StaffMemberDtosId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PatientDtosId", "StaffMemberDtosId");

                    b.HasIndex("StaffMemberDtosId");

                    b.ToTable("PatientDtoStaffMemberDto");
                });

            modelBuilder.Entity("Theseus.Infrastructure.Dtos.ExamSetDto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("ExamSets");
                });

            modelBuilder.Entity("Theseus.Infrastructure.Dtos.MazeDto", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte>("EndDirection")
                        .HasColumnType("tinyint");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("Solution")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("SolutionStartColumn")
                        .HasColumnType("int");

                    b.Property<int>("SolutionStartRow")
                        .HasColumnType("int");

                    b.Property<byte>("StartDirection")
                        .HasColumnType("tinyint");

                    b.Property<byte[]>("Structure")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Mazes");
                });

            modelBuilder.Entity("Theseus.Infrastructure.Dtos.PatientDto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("EducationLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sex")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("Theseus.Infrastructure.Dtos.StaffMemberDto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StaffMembers");
                });

            modelBuilder.Entity("ExamSetDtoMazeDto", b =>
                {
                    b.HasOne("Theseus.Infrastructure.Dtos.ExamSetDto", null)
                        .WithMany()
                        .HasForeignKey("ExamSetDtosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Theseus.Infrastructure.Dtos.MazeDto", null)
                        .WithMany()
                        .HasForeignKey("MazeDtosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PatientDtoStaffMemberDto", b =>
                {
                    b.HasOne("Theseus.Infrastructure.Dtos.PatientDto", null)
                        .WithMany()
                        .HasForeignKey("PatientDtosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Theseus.Infrastructure.Dtos.StaffMemberDto", null)
                        .WithMany()
                        .HasForeignKey("StaffMemberDtosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Theseus.Infrastructure.Dtos.ExamSetDto", b =>
                {
                    b.HasOne("Theseus.Infrastructure.Dtos.StaffMemberDto", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Theseus.Infrastructure.Dtos.MazeDto", b =>
                {
                    b.HasOne("Theseus.Infrastructure.Dtos.StaffMemberDto", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });
#pragma warning restore 612, 618
        }
    }
}
